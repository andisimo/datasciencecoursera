if(id < 10)
{
id <- paste("00", id, sep="")
} else if(id < 100)
{
id <- paste("0", id, sep="")
} else
{
id <- as.character(id)
}
#construct directory location
location <- paste(directory, "/", id, ".csv", sep = "")
#read file
csv <- read.csv(location)
#append the file to dframe
rbind(dframe, csv)
}
#mean(csv[[pollutant]], na.rm = TRUE)
return(dframe)
}
pollutantmean(getwd(), "nitrate", 1:2)
myfunc <- function(directory, id = 1:332){}
a<-list()
a <- 10
a
a <- 11
a
myfunc <- function(directory, id = 1:332)
{
z <- list()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(id < 10)
{
id <- paste("00", id, sep="")
} else if(id < 100)
{
id <- paste("0", id, sep="")
} else
{
id <- as.character(id)
}
#construct directory location
location <- paste(directory, "/", id, ".csv", sep = "")
#read file
csv <- read.csv(location)
#append the file to dframe
rbind(dframe, csv)
}
return(z)
}
myfunc(getwd(), 1)
myfunc <- function(directory, id = 1:332)
{
z <- list()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(id < 10)
{
id <- paste("00", id, sep="")
z <- id
} else if(id < 100)
{
id <- paste("0", id, sep="")
z <- id
} else
{
id <- as.character(id)
z <- id
}
return(z)
}
myfunc(getwd(), 1)
myfunc <- function(directory, id = 1:332)
{
z <- list()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(id < 10)
{
id <- paste("00", id, sep="")
z <- id
} else if(id < 100)
{
id <- paste("0", id, sep="")
z <- id
} else
{
id <- as.character(id)
z <- id
}
return(z)
}
myfunc <- function(directory, id = 1:332)
{
z <- list()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(id < 10)
{
id <- paste("00", id, sep="")
z <- id
} else if(id < 100)
{
id <- paste("0", id, sep="")
z <- id
} else
{
id <- as.character(id)
z <- id
}
}
return(z)
}
myfunc(getwd(), 1)
myfunc(getwd(), 1:3)
myfunc <- function(directory, id = 1:332)
{
z <- list()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumber <- paste("00", idnumber, sep="")
z <- idnumber
} else if(idnumber < 100)
{
idnumber <- paste("0", idnumber, sep="")
z <- idnumber
} else
{
idnumber <- as.character(idnumber)
z <- idnumber
}
}
return(z)
}
myfunc(getwd(), 1:3)
myfunc(getwd(), 1:332)
pollutantmean <- function (directory, pollutant, id = 1:332)
{
dframe <- data.frame()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumber <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumber <- paste("0", idnumber, sep="")
} else
{
idnumber <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumber, ".csv", sep = "")
#read file
csv <- read.csv(location)
#append the file to dframe
dframe <- rbind(dframe, csv)
}
#mean(csv[[pollutant]], na.rm = TRUE)
return(dframe)
}
pollutantmean(getwd(), pollutant = "nitrate", 1:2)
n <- pollutantmean(getwd(), pollutant = "nitrate", 1:2)
pollutantmean <- function (directory, pollutant, id = 1:332)
{
dframe <- data.frame()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumber <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumber <- paste("0", idnumber, sep="")
} else
{
idnumber <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumber, ".csv", sep = "")
#read file
csv <- read.csv(location)
#append the file to dframe
dframe <- rbind(dframe, csv)
}
#return mean
mean(dframe[[pollutant]], na.rm = TRUE)
}
pollutantmean(getwd(), "nitrate", 1:2)
mean(ccsv["nitrate"], na.rm=TRUE)
mean(ccsv$nitrate, na.rm=TRUE)
pollutantmean(getwd(), "sulfate", 1:2)
mean(ccsv$sulfate, na.rm=TRUE)
pollutantmean(getwd(), "sulfate")
pollutantmean(getwd(), "sulfate", 1:10)
pollutantmean(getwd(), "sulfate", 70:72)
pollutantmean(getwd(), "nitrate", 70:72)
pollutantmean(getwd(), "nitrate", 23)
acsv[10]
acsv[10,4]
acsv[1:10, 1:4]
e <- complete.cases(acsv[,2:3])
f <- acsv[e]
f <- acsv[e, ]
g <- 1, 10
g <- [1, 10]
g <- list(1, a)
g
g <- list(1, "a")
g
g <- c(1, 10)
g
g <- data.frame(1:3, row.names = ["first", "second", "third"])
g <- data.frame("first" = 1, "second" = 2, "third" = 3)
g
length(f)
length(f[,4])
complete <- function(directory, id = 1:332)
{
dframe <- data.frame()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumber <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumber <- paste("0", idnumber, sep="")
} else
{
idnumber <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumber, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#create a data frame with one row and 2 columns - ID and NOBS (a count of the good rows)
thisframe <- data.frame("id" = idnumber, "nobs" = length(goodframe[,4]))
#append thisframe to the data frame you will return
rbind(dframe, thisframe)
}
return(dframe)
}
complete(getwd(), 1)
complete <- function(directory, id = 1:332)
{
dframe <- data.frame()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumber <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumber <- paste("0", idnumber, sep="")
} else
{
idnumber <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumber, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#create a data frame with one row and 2 columns - ID and NOBS (a count of the good rows)
thisframe <- data.frame("id" = idnumber, "nobs" = length(goodframe[,4]))
#append thisframe to the data frame you will return
dframe <- rbind(dframe, thisframe)
}
return(dframe)
}
complete(getwd(), 1)
acsvnona <- na.omit(acsv)
complete(getwd(), c(2, 4, 8, 10, 12))
complete(getwd(), 30:25)
complete(getwd(), 3)
complete <- function(directory, id = 1:332)
{
dframe <- data.frame()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumberstring <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumberstring <- paste("0", idnumber, sep="")
} else
{
idnumberstring <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumberstring, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#create a data frame with one row and 2 columns - ID and NOBS (a count of the good rows)
thisframe <- data.frame("id" = idnumber, "nobs" = length(goodframe[,4]))
#append thisframe to the data frame you will return
dframe <- rbind(dframe, thisframe)
}
return(dframe)
}
complete(getwd(), 1)
complete(getwd(), 11)
complete(getwd(), 300)
complete(getwd(), c(2, 4, 8, 10, 12))
complete(getwd(), 30:25)
?cor
ccsv[,4]
acsv[,4]
acsv
acsvnona[,4]
acsvnona.colnames
colnames(acsvnona)
corr <- function(directory, threshold = 0)
{
id <- 1:332
returnvec <- vector()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumberstring <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumberstring <- paste("0", idnumber, sep="")
} else
{
idnumberstring <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumberstring, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#compare to threshold
if(length(goodframe[,4]) >= threshold)
{
c(returnvec, cor(goodframe$nitrate, goodframe$sulfate))
}
}
return(returnvec)
}
cr <- corr(getwd(), 150)
cr
head(cr)
corr <- function(directory, threshold = 0)
{
id <- 1:332
#returnvec <- vector()
returnvec <- 1
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumberstring <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumberstring <- paste("0", idnumber, sep="")
} else
{
idnumberstring <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumberstring, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#compare to threshold
if(length(goodframe[,4]) >= threshold)
{
#c(returnvec, cor(goodframe$nitrate, goodframe$sulfate))
returnvec <- returnvec + 1
}
}
return(returnvec)
}
cr <- corr(getwd(), 150)
cr
corr <- function(directory, threshold = 0)
{
id <- 1:332
returnvec <- vector()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumberstring <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumberstring <- paste("0", idnumber, sep="")
} else
{
idnumberstring <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumberstring, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#compare to threshold
if(length(goodframe[,4]) >= threshold)
{
#c(returnvec, cor(goodframe$nitrate, goodframe$sulfate))
returnvec <- cor(goodframe$nitrate, goodframe$sulfate)
}
}
return(returnvec)
}
cr <- corr(getwd(), 150)
cr
corr <- function(directory, threshold = 0)
{
id <- 1:332
returnvec <- vector()
for(idnumber in id)
{
#transform id integer with no leading 0's into string to match filename
if(idnumber < 10)
{
idnumberstring <- paste("00", idnumber, sep="")
} else if(idnumber < 100)
{
idnumberstring <- paste("0", idnumber, sep="")
} else
{
idnumberstring <- as.character(idnumber)
}
#construct directory location
location <- paste(directory, "/", idnumberstring, ".csv", sep = "")
#read file
csv <- read.csv(location)
#flag rows with NA data
good <- complete.cases(csv[,2:3])
#isolate the good rows in their own data frame
goodframe <- csv[good, ]
#compare to threshold
if(length(goodframe[,4]) >= threshold)
{
returnvec <- c(returnvec, cor(goodframe$nitrate, goodframe$sulfate))
}
}
return(returnvec)
}
cr <- corr(getwd(), 150)
cr
head(cr)
summary(cr)
corr(getwd(), 400)
head(cr)
summary(cr)
cr <- corr(getwd(), 400)
head(cr)
summary(cr)
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getwd()
1
submit()
Selection: 1
getwd()
submit()
setwd("C:/Users/anschult/Documents/Git/datasciencecoursera/RProgrammingCourse")
getwd()
submit()
Selection: 2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
